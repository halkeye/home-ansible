---
- name: Create a directory if it does not exist
  become: true
  ansible.builtin.file:
    path: '{{ docker_config_dir }}/traefik'
    state: directory
    owner: '{{ docker_uid }}'
    group: '{{ docker_gid }}'
  notify:
    - Restart traefik

- name: Copy config file
  become: true
  template:
    src: traefik.yaml.j2
    dest: '{{docker_config_dir}}/traefik/traefik.yaml'
    owner: '{{ docker_uid }}'
    group: '{{ docker_gid }}'
  notify:
    - Restart traefik

- name: Copy routes file
  become: true
  template:
    src: routes.yaml.j2
    dest: '{{docker_config_dir}}/traefik/routes.yaml'
    owner: '{{ docker_uid }}'
    group: '{{ docker_gid }}'
  notify:
    - Restart traefik

- name: Traefik
  community.docker.docker_container:
    name: traefik
    image: traefik:v2.9.1
    restart_policy: unless-stopped
    pull: yes
    state: started
    security_opts:
      - no-new-privileges:true
    volumes:
      - '{{ docker_data_dir }}/traefik/acme.json:/acme.json'
      - '{{ docker_config_dir }}/traefik:/config'
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command_handling: correct
    etc_hosts:
      host.docker.internal: host-gateway
    command:
      - '--configFile=/config/traefik.yaml'
    ports:
      - 80:80
      - 443:443
    env:
      CF_API_KEY: '{{ cloudflare_api_key }}'
      CF_API_EMAIL: '{{ cloudflare_email }}'
    labels:
      # global redirect to https
      traefik.http.routers.http-catchall.rule: 'hostregexp(`{host:.+}.{{ docker_hostname }}`)'
      traefik.http.routers.http-catchall.entrypoints: 'web'
      traefik.http.routers.http-catchall.middlewares: 'redirect-to-https'
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: 'https'

      # dashboard
      traefik.http.routers.traefik.rule: 'Host(`traefik.{{ docker_hostname }}`)'
      traefik.http.routers.traefik.tls: 'true'
      traefik.http.routers.traefik.entrypoints: 'websecure'
      traefik.http.routers.traefik.service: 'api@internal'

